{"version":3,"sources":["components/header/header.js","components/footer/footer.js","reduxState/reducers/reducer.js","reduxState/action.types.js","reduxState/reducers/web.reducer.js","reduxState/reducers/index.js","reduxState/store.js","reduxState/actions.js","components/content/content.controller.js","components/content/style.component.js","components/content/content.js","components/authentication/auth.js","components/app/App.js","serviceWorker.js","components/landingPage/landingPage.jsx","components/pageNotFound/pageNotFound.js","components/webPreview/webPreview.js","components/navigation/navigation.js","index.js"],"names":["Header","onChange","this","props","onNewElem","id","className","value","Component","Footer","initialState","reducer","webPreview","action","type","payload","filter","item","element","web","state","map","el","produce","updated","children","text","style","styleProp","styleValue","unit","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","updateWebPreview","WebPreview","dispatch","deleteWebElement","updateWebElement","createWebElement","setStyle","e","document","getElementById","alert","StyleComponent","isDropDownMenu","name","items","key","Content","screen","width","textAlign","getState","i","Fragment","login","username","password","a","api","axios","create","post","res","logout","callback","localStorage","removeItem","save","token","headers","authorization","response","App","newElement","tag","Math","random","newE","React","createElement","onClick","addToStyling","actions","display","saveNewText","editText","beforeElementDeletion","querySelector","target","Array","from","getElementsByClassName","forEach","background","elementToUpdate","innerHTML","getItem","console","log","onWebPreview","onLogout","auth","history","push","Boolean","location","hostname","match","LandingPage","msgFromServer","onLogin","then","data","setState","setItem","accessToken","placeholder","PageNotFound","webElements","remove","Navigation","saveChanges","navigate","route","flexDirection","child","saveWeb","Location","exact","path","component","Home","mainAppOutput","ReactDOM","render","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3a3c522.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <select onChange={this.props.onNewElem} id='new_element' className='selectElement'>\r\n                    <option value='none'>Add Text Element</option>\r\n                    <option value='h1'>Heading</option>\r\n                    <option value='p'>Paragraph</option>\r\n                    <option value='a'>Link</option>\r\n                </select>\r\n                <select onChange={this.props.onNewElem} id='new_element' className='selectElement'>\r\n                    <option value='none'>Add Image/Video</option>\r\n                    <option value='video' >Video</option>\r\n                    <option value='img' >Image</option>\r\n                </select>\r\n                <button className='selectElement'><span className='fa fa-bug'></span>Report bugs</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Footer Component</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import * as actionType from '../action.types';\r\n\r\nconst initialState = []\r\n\r\nexport const reducer = (webPreview = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.UPDATE_WEB_PREVIEW:\r\n            return [{ webPreview: action.payload }];\r\n\r\n        case actionType.DELETE_WEB_PREVIEW:\r\n            return webPreview.filter(item => item.element !== action.payload);\r\n\r\n        case actionType.CREATE_WEB_PREVIEW:\r\n            return [...webPreview, { webPreview: action.payload }];\r\n\r\n        default:\r\n            return [{ webPreview }]\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\n\r\n","export const CREATE_WEB_PREVIEW = 'CREATE_WEB_PREVIEW';\r\nexport const DELETE_WEB_PREVIEW = 'DELETE_WEB_PREVIEW';\r\nexport const UPDATE_WEB_PREVIEW = 'UPDATE_WEB_PREVIEW';\r\n\r\nexport const CREATE_WEB_ELEMENT = 'CREATE_WEB_ELEMENT';\r\nexport const DELETE_WEB_ELEMENT = 'DELETE_WEB_ELEMENT';\r\nexport const UPDATE_WEB_ELEMENT = 'UPDATE_WEB_ELEMENT';\r\nexport const UPDATE_STYLING = 'UPDATE_STYLING';","import { produce } from 'immer';\r\nimport * as actionType from '../action.types';\r\n\r\nconst initialState = []\r\n\r\nexport const web = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionType.UPDATE_WEB_ELEMENT:\r\n            return state.map(el =>\r\n                el.state.props.id === action.payload.id ?\r\n                    produce(el, updated => {\r\n                        updated.state.props.children[0].props.children = action.payload.text;\r\n                    })\r\n                    : el\r\n            )\r\n        case actionType.UPDATE_STYLING:\r\n            return state.map(el =>\r\n                el.state.props.id === action.payload.id ?\r\n                    produce(el, updated => {\r\n                        updated.state.props.children[0].props.style[action.payload.styleProp] = `${action.payload.styleValue}${action.payload.unit}`;\r\n                    })\r\n                    : el\r\n            )\r\n        case actionType.DELETE_WEB_ELEMENT:\r\n            return state.filter(el => el.state.props.id !== action.payload);\r\n\r\n        case actionType.CREATE_WEB_ELEMENT:\r\n            return [...state, { state: action.payload }];\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default web;\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport reducer from './reducer';\r\nimport web from './web.reducer';\r\n\r\n\r\nexport default combineReducers({\r\n    webPreview: reducer,\r\n    web: web\r\n});","import { createStore } from 'redux';\r\nimport combineReducers from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n    combineReducers,\r\n    initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import store from './store';\r\nimport * as action from './action.types';\r\n\r\n//store.dispatch({type: 'UPDATE_NAME', payload: 'tonic'})\r\n\r\nexport function deleteWebPreview(WebPreview) {\r\n    store.dispatch({ type: action.DELETE_WEB_PREVIEW, payload: WebPreview })\r\n}\r\n\r\nexport function updateWebPreview(WebPreview) {\r\n    store.dispatch({ type: action.UPDATE_WEB_PREVIEW, payload: WebPreview })\r\n}\r\n\r\nexport function createWebPreview(WebPreview) {\r\n    store.dispatch({ type: action.CREATE_WEB_PREVIEW, payload: WebPreview })\r\n}\r\n\r\nexport function deleteWebElement(element) {\r\n    store.dispatch({ type: action.DELETE_WEB_ELEMENT, payload: element })\r\n}\r\n\r\nexport function updateWebElement(element) {\r\n    store.dispatch({ type: action.UPDATE_WEB_ELEMENT, payload: element })\r\n}\r\n\r\nexport function updateStyling(element) {\r\n    store.dispatch({ type: action.UPDATE_STYLING, payload: element })\r\n}\r\n\r\nexport function createWebElement(element) {\r\n    store.dispatch({ type: action.CREATE_WEB_ELEMENT, payload: element })\r\n}","import * as actions from '../../reduxState/actions';\r\n\r\nexport function setStyle(e, unit) {\r\n    let id = `wrapper:${document.getElementById('id').value}`;\r\n\r\n    if (document.getElementById(id) === null) {\r\n        alert('please click on the HTML element to style it !!');\r\n        return;\r\n    }\r\n\r\n    let styleProp = e;\r\n    let styleValue = document.getElementById(e).value;\r\n\r\n    let payload = {\r\n        id,\r\n        styleProp,\r\n        styleValue,\r\n        unit\r\n    }\r\n\r\n    actions.updateStyling(payload);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { setStyle } from './content.controller';\r\n\r\nclass StyleComponent extends Component {\r\n    state = {}\r\n    render() {\r\n        if (this.props.isDropDownMenu === 'true') {\r\n            return (\r\n                <div className='property'>\r\n                    <select id={this.props.name} onChange={() => setStyle(this.props.name, this.props.unit)}>\r\n                        {this.props.items.map(item => <option value={item} key={item}>{item}</option>)}\r\n                    </select>\r\n                    {this.props.text}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className='property'>\r\n                <input type={this.props.type} id={this.props.name} className='style-input' \r\n                onChange={() => setStyle(this.props.name, this.props.unit)}/>\r\n                <span>{this.props.text}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StyleComponent;","import React, { Component } from 'react';\r\nimport StyleComponent from './style.component'\r\nimport store from '../../reduxState/store';\r\n\r\nclass Content extends Component {\r\n    componentDidMount() {\r\n        //for responsive design\r\n        if (window.screen.width < 400) {\r\n            document.getElementById('content').style['flex-wrap'] = 'wrap';\r\n            document.getElementById('content').style['flex-direction'] = 'column';\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='content' id='content'>\r\n                <div className='styling' id='styling'>\r\n                    <div style={{ textAlign: 'center' }} className='style-heading'><h2>Style</h2></div>\r\n                    <StyleComponent name='id' type='hidden' text='ID' unit='' />\r\n                    <StyleComponent name='backgroundColor' type='color' text='Background Color' unit='' />\r\n                    <StyleComponent name='borderColor' type='color' text='Border Color' unit='' />\r\n                    <StyleComponent name='borderRadius' type='number' text='Border Radius' unit='px' />\r\n                    <StyleComponent name='borderStyle' isDropDownMenu='true' items={['solid', 'dotted']} type='text' text='Border Style' unit='' />\r\n                    <StyleComponent name='borderWidth' type='number' text='Border Width' unit='px' />\r\n                    <StyleComponent name='color' type='color' text='Color' unit='' />\r\n                    <StyleComponent name='fontSize' type='number' text='Font Size' unit='px' />\r\n                    <div className='property'>\r\n                        <details>\r\n                            <summary>margin</summary>\r\n                            <StyleComponent name='marginTop' type='number' text='Margin Top' unit='px' />\r\n                            <StyleComponent name='marginBottom' type='number' text='Margin bottom' unit='px' />\r\n                            <StyleComponent name='marginLeft' type='number' text='Margin Left' unit='px' />\r\n                            <StyleComponent name='marginRight' type='number' text='Margin Right' unit='px' />\r\n                        </details>\r\n                    </div>\r\n                    <div className='property'>\r\n                        <details>\r\n                            <summary>Padding</summary>\r\n                            <StyleComponent name='paddingTop' type='number' text='Padding Top' unit='px' />\r\n                            <StyleComponent name='paddingBottom' type='number' text='Padding Bottom' unit='px' />\r\n                            <StyleComponent name='paddingLeft' type='number' text='Padding Left' unit='px' />\r\n                            <StyleComponent name='paddingRight' type='number' text='Padding Right' unit='px' />\r\n                        </details>\r\n                    </div>\r\n                    <StyleComponent name='textAlign' isDropDownMenu='true' items={['left', 'center', 'right', 'justify']} type='text' text='Text Align' unit='' />\r\n                    <br />\r\n                </div>\r\n                <div id='web'>{store.getState().web.map((el, i) =>\r\n                    <React.Fragment key={i}>{el.state}</React.Fragment>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","import axios from 'axios';\r\n\r\nimport store from '../../reduxState/store';\r\n\r\nclass Auth {\r\n    constructor() {\r\n        this.login = async (username, password) => {\r\n            const api = axios.create()\r\n            let res = await api.post('http://localhost:4000/login', { username, password })\r\n            return res;\r\n        }\r\n\r\n        this.logout = (callback) => {\r\n            localStorage.removeItem('authorization');\r\n            callback();\r\n        }\r\n\r\n        this.save = async (token) => {\r\n            const api = axios.create({ headers: { authorization: token } })\r\n            let response = await api.post('http://127.0.0.1:4000/save',\r\n                {\r\n                    web: store.getState().webPreview[0].webPreview[0]\r\n                })\r\n            return response;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Auth();\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n//import 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\nimport Header from '../header/header';\nimport Footer from '../footer/footer';\nimport Content from '../content/content';\nimport auth from '../authentication/auth';\nimport * as actions from '../../reduxState/actions';\n\nclass App extends Component {\n\n  newElement = (tag) => {\n    if (tag === 'none') return;\n    let id = Math.random();\n\n    let newE = React.createElement(tag, { id: id, className: 'web-element', style: { width: '100%' }, onClick: this.addToStyling }, 'New Element');\n\n    /*Each element will have its own hidden texarea hidden below it \n    and it will be wrapped around a div with className: new-element-wrapper*/\n    let newEWithEditBox =\n      <div className='new-element-wrapper' id={'wrapper:' + id}>\n        {newE}\n        <div style={{ display: 'none', width: '100%' }} id={`edit-box:${id}`} className='temporary-elements'>\n          <textarea id={`text-area:${id}`} className='web-text-area'></textarea>\n          <button className='btn btn-primary btn-sm' onClick={(e) => this.saveNewText(id)}>Save</button>\n        </div>\n        <button className='badge btn-outline-secondary'>\n          <span className='fa fa-edit fa-lg temporary-elements' onClick={(e) => this.editText(id)}></span>\n        </button>\n        <button className='badge btn-outline-danger'>\n          <span className='fa fa-trash fa-lg temporary-elements' onClick={(e) => this.beforeElementDeletion(id)}></span>\n        </button>\n      </div>;\n\n    actions.createWebElement(newEWithEditBox);\n\n    document.querySelector('#new_element').value = 'none';\n  }\n\n  beforeElementDeletion = (id) => {\n    //to avoid some bugs before deleting an element, we need to ensure that text-area is hidden\n    document.getElementById('text-area:' + id).style.display !== 'none' && this.saveNewText(id);\n    actions.deleteWebElement('wrapper:' + id);\n  }\n\n  addToStyling = (e) => {\n    document.getElementById('id').value = e.target.id;\n    Array.from(document.getElementsByClassName('new-element-wrapper')).forEach(element =>\n      element.id === `wrapper:${e.target.id}` ? element.style.background = 'rgba(154, 218, 218, 0.829)' : element.style.background = 'white')\n  }\n\n  editText = (e) => {\n    document.getElementById('edit-box:' + e).style.display = 'block';\n    let elementToUpdate = document.getElementById(e);\n\n    document.getElementById('text-area:' + e).value = elementToUpdate.innerHTML;\n    elementToUpdate.style.display = 'none';\n  }\n  saveNewText = (id) => {\n    document.getElementById(id).style.display = 'block';\n    actions.updateWebElement({ id: 'wrapper:' + id, text: document.getElementById('text-area:' + id).value });\n    document.getElementById('edit-box:' + id).style.display = 'none';\n  }\n  componentWillMount() {\n    if (!(localStorage.getItem('authorization')))\n      console.log('you have not logged in');\n    //this.props.history.push('/login')\n  }\n\n  render() {\n    return (\n      <div className='main-container' id='main-container'>\n        <Header\n          onWebPreview={() => this.webPreview()}\n          onLogout={() => auth.logout(() => this.props.history.push('/'))}\n          onNewElem={() => this.newElement(document.querySelector('#new_element').value)} />\n        <Content />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\nimport auth from '../authentication/auth';\r\n\r\nclass LandingPage extends Component {\r\n    state = {\r\n        username: null,\r\n        password: null,\r\n        msgFromServer: null\r\n    }\r\n\r\n    onLogin = () => {\r\n        auth.login(this.state.username, this.state.password)\r\n            .then(res => {\r\n                if (res.data === 'password incorrect')\r\n                    this.setState({ msgFromServer: res.data })\r\n                else {\r\n                    localStorage.setItem('authorization', 'bearer ' + res.data.accessToken)\r\n                    this.props.history.push('/');\r\n                }\r\n            })\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (localStorage.getItem('authorization'))\r\n            this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Landing Page</h2>\r\n                <p>{this.state.msgFromServer}</p>\r\n                <input type='text' onChange={(e) => this.setState({ username: e.target.value })} name='username' placeholder='User Name' />\r\n                <br />\r\n                <input type='password' onChange={(e) => this.setState({ password: e.target.value })} name='username' placeholder='Password' />\r\n                <br />\r\n                <button onClick={this.onLogin}>Login</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <div>\r\n            <h1>Page Not Found</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;","import React, { Component } from 'react';\r\nimport store from '../../reduxState/store';\r\n\r\nclass WebPreview extends Component {\r\n\r\n    componentDidMount() {\r\n        let webElements = store.getState().webPreview[0].webPreview.map(data => data)\r\n        document.getElementById('web-preview').innerHTML = webElements;\r\n\r\n        Array.from(document.getElementsByClassName('temporary-elements')).map(el => el.remove())\r\n\r\n        Array.from(document.getElementsByClassName('new-element-wrapper')).forEach( element => \r\n            element.style.background = 'white')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id='web-preview'>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WebPreview;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './navigation.css';\r\n\r\nimport * as actions from '../../reduxState/actions';\r\nimport auth from '../authentication/auth';\r\n//import axios from 'axios';\r\n\r\nclass Navigation extends Component {\r\n\r\n    saveChanges = () => {\r\n        let web = [document.getElementById('web').innerHTML];\r\n        actions.updateWebPreview(web);\r\n    }\r\n    navigate = (route) => {\r\n        if (document.getElementById('web') !== null) this.saveChanges(); //to check if we r on the workspace page\r\n        this.props.history.push(route);\r\n    }\r\n\r\n    saveWeb() {\r\n        auth.save(localStorage.getItem('authorization'))\r\n            .then(res => console.log(res.data))\r\n    }\r\n\r\n    componentDidMount() {\r\n        //for responsive design\r\n        if (window.screen.width < 550) {\r\n            document.getElementById('header').style.flexDirection = 'column-reverse';\r\n            Array.from(document.getElementById('header').children).forEach(child =>\r\n                child.style.width = '100%')\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='header' id='header'>\r\n                <div className='navbar'>\r\n                    <div className='btn btn-info btn-sm' onClick={() => this.navigate('/preview')}>\r\n                        <span className='fa fa-eye fa-md'></span>Preview\r\n                    </div>\r\n                    <div className='btn btn-primary btn-sm' onClick={() => this.navigate('/')}>\r\n                        <span className='fa fa-eye-slash fa-md'></span>Workspace\r\n                    </div>\r\n                    <div className='btn btn-success btn-sm' onClick={this.saveWeb}>\r\n                        <span className='fa fa-save fa-md'></span>Save\r\n                    </div>\r\n                </div>\r\n                <div className='sign-out-link'>\r\n                    <span className='greeting'>\r\n                        <span>Hi User</span>\r\n                    </span>\r\n                    <span className='sign-out'>\r\n                        <div className='btn btn-secondary btn-sm' onClick={() => localStorage.removeItem('authorization')}>\r\n                            <span className='fa fa-sign-out fa-md '></span>Sign out\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport LandingPage from './components/landingPage/landingPage';\nimport PageNotFound from './components/pageNotFound/pageNotFound';\nimport WebPreview from './components/webPreview/webPreview';\nimport Navigation from './components/navigation/navigation';\n\nimport store from './reduxState/store';\n\nfunction Location() {\n    return (\n        <div className='main-container'>\n            <Switch>\n                <Route exact path='/login' component={LandingPage} />\n                <Route path='/' component={Home} />\n            </Switch>\n        </div>\n    )\n}\n\nfunction Home() {\n    return (\n        <React.Fragment>\n            <Route path='/' component={Navigation} />\n            <Switch>\n                <Route exact path='/' component={App} />\n                <Route exact path='/preview' component={WebPreview} />\n                <Route exact path='**' component={PageNotFound} />\n            </Switch>\n        </React.Fragment>\n    )\n}\n\nlet mainAppOutput = () => {\n    ReactDOM.render(\n        <BrowserRouter><Location /></BrowserRouter>\n        , document.getElementById('root')\n    );\n}\nmainAppOutput();\nstore.subscribe(mainAppOutput);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}